# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ yannick ]
  pull_request:
    branches: [ yannick ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]     

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package



      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        #uses: aws-actions/amazon-ecr-login@v1   
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/v6n8a7u8

      - name: Build, tag, and push front end app image to Amazon ECR
        env:
          ECR_REGISTRY: v6n8a7u8 
          ECR_REPOSITORY: petclinic  
          IMAGE_TAG: latest   
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG public.ecr.aws/v6n8a7u8/$ECR_REPOSITORY:$IMAGE_TAG 
          docker push public.ecr.aws/v6n8a7u8/$ECR_REPOSITORY:$IMAGE_TAG
